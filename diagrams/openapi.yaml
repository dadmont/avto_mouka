openapi: 3.0.3
info:
  title: Спецификация OpenAPI
  version: 1.0.0
externalDocs:
  description: Github
  url: https://github.com/dadmont/avto_mouka
servers:
- url: http://localhost:3000/
tags:
- name: user
  description: Операции с клиентами
- name: washer
  description: Операции с автомойками
- name: order
  description: Операции с заказами
- name: service
  description: Операции с услугами
paths:
  /users:
    get:
      tags:
      - user
      summary: Получить список пользователей
      description: Возвращает список идентификаторов зарегистрированных пользователей.
      operationId: getUsers
      responses:
        "200":
          description: Успешный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdArray'
    post:
      tags:
      - user
      summary: Создать пользователя
      description: Создание нового пользователя.
      operationId: createUser
      requestBody:
        description: Объект нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: Пользователь успешно создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Такой пользователь уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{UserId}:
    get:
      tags:
      - user
      summary: Получить пользователя по ID
      description: Возвращает данные пользователя по указанному ID.
      operationId: getUserById
      parameters:
      - name: UserId
        in: path
        description: Идентификатор пользователя.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Пользователь найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Пользователь не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - user
      summary: Изменить пользователя
      description: Обновляет данные пользователя по ID.
      operationId: updateUserById
      parameters:
      - name: UserId
        in: path
        description: Идентификатор пользователя.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Объект обновленного пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Пользователь успешно обновлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Неверный формат ID или запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Пользователь не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - user
      summary: Удалить пользователя по ID
      description: Удаляет пользователя из системы по его ID.
      operationId: deleteUserbyId
      parameters:
      - name: UserId
        in: path
        description: Идентификатор пользователя.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Пользователь успешно удален.
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Пользователь не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /washers:
    get:
      tags:
      - washer
      summary: Получить список автомоек
      description: Возвращает список всех автомоек.
      operationId: getWashers
      responses:
        "200":
          description: Успешный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WashersList'
    post:
      tags:
      - washer
      summary: Создать автомойку
      description: Создает новую автомойку.
      operationId: createWasher
      requestBody:
        description: Объект новой автомойки.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Washer'
        required: true
      responses:
        "201":
          description: Автомойка успешно создана.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Washer'
        "400":
          description: Такая автомойка уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /washers/{WasherId}:
    get:
      tags:
      - washer
      summary: Получить автомойку по ID
      description: Возвращает данные автомойки по указанному ID.
      operationId: getWasherById
      parameters:
      - name: WasherId
        in: path
        description: Идентификатор автомойки.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Автомойка найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Washer'
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Автомойка не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - washer
      summary: Изменить автомойку
      description: Обновляет данные автомойки по ID.
      operationId: updateWasherById
      parameters:
      - name: WasherId
        in: path
        description: Идентификатор автомойки.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Объект обновленной автомойки.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Washer'
        required: true
      responses:
        "200":
          description: Автомойка успешно обновлена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Washer'
        "400":
          description: Неверный формат ID или запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Автомойка не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - washer
      summary: Удалить автомойку по ID
      description: Удаляет автомойку из системы по ID.
      operationId: deleteWasherById
      parameters:
      - name: WasherId
        in: path
        description: Идентификатор автомойки.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Автомойка успешно удалена.
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Автомойка не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      tags:
      - order
      summary: Получить список заказов
      description: Возвращает список всех заказов.
      operationId: getOrders
      responses:
        "200":
          description: Успешный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersList'
    post:
      tags:
      - order
      summary: Создать заказ
      description: Формирует новый заказ.
      operationId: createOrder
      requestBody:
        description: Объект нового заказа.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "201":
          description: Заказ успешно создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: Такой заказ уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{UserId}:
    get:
      tags:
      - order
      summary: Получить список заказов пользователя
      description: Возвращает список заказов пользователя по ID.
      operationId: getOrdersByUserId
      parameters:
      - name: UserId
        in: path
        description: Идентификатор пользователя.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersList'
        "404":
          description: Пользователь не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{OrderId}:
    get:
      tags:
      - order
      summary: Получить заказ по ID
      description: Возвращает данные заказа по указанному ID.
      operationId: getOrderById
      parameters:
      - name: OrderId
        in: path
        description: Идентификатор заказа.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Заказ найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Заказ не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - order
      summary: Изменить заказ по ID
      description: Обновляет данные заказа по указанному ID.
      operationId: updateOrderById
      parameters:
      - name: OrderId
        in: path
        description: Идентификатор заказа.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Объект обновленного заказа.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: Заказ успешно обновлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: Неверный формат ID или запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Заказ не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - order
      summary: Удалить заказ по ID
      description: Удаляет заказ по ID.
      operationId: deleteOrderbyId
      parameters:
      - name: OrderId
        in: path
        description: Идентификатор заказа.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Заказ успешно удален.
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Заказ не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{OrderId}/pay:
    post:
      tags:
      - order
      summary: Оплатить заказ по ID
      description: Оплачивает заказ с использованием платежной системы.
      operationId: payOrder
      parameters:
      - name: OrderId
        in: path
        description: Идентификатор заказа.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Заказ успешно оплачен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: Заказ уже оплачен или ошибка в запросе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Заказ не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services:
    get:
      tags:
      - service
      summary: Получить список услуг
      description: Возвращает список всех услуг.
      operationId: getServices
      responses:
        "200":
          description: Успешный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesList'
    post:
      tags:
      - service
      summary: Создать услугу
      description: Создает новую услугу.
      operationId: createService
      requestBody:
        description: Объект новой услуги.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      responses:
        "201":
          description: Услуга успешно создана.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        "400":
          description: Такая услуга уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{ServiceId}:
    get:
      tags:
      - service
      summary: Получить услугу по ID
      description: Возвращает данные услуги по указанному ID.
      operationId: getServiceById
      parameters:
      - name: ServiceId
        in: path
        description: Идентификатор услуги.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Услуга найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Услуга не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - service
      summary: Изменить услугу по ID
      description: Обновляет данные услуги по ID.
      operationId: updateServiceById
      parameters:
      - name: ServiceId
        in: path
        description: Идентификатор услуги.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Объект обновленной услуги.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      responses:
        "200":
          description: Услуга успешно обновлена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        "400":
          description: Неверный формат ID или запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Услуга не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - service
      summary: Удалить услугу по ID
      description: Удаляет услугу по ID.
      operationId: deleteServiceById
      parameters:
      - name: ServiceId
        in: path
        description: Идентификатор услуги.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Услуга успешно удалена.
        "400":
          description: Неверный формат ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Услуга не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Иванов Иван Иванович
        phone:
          type: string
          description: Телефонный номер клиента
          example: +7(9XX)XXX-XX-XX
        gov_number:
          type: string
          description: Гос. номер автомобиля
          example: x111xx65rus
    IdArray:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
            example: 10
    WashersList:
      type: object
      properties:
        washers:
          type: array
          items:
            $ref: '#/components/schemas/Washer'
    OrdersList:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    ServicesList:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Washer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 111
        longtitude:
          type: number
          example: 77.59
        latitude:
          type: number
          example: 39.11
        address:
          type: string
          example: "Ул. Ленина, д. 222"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        client_id:
          type: integer
          format: int64
          example: 123
        washer_id:
          type: integer
          format: int64
          example: 123
        service_id:
          type: integer
          format: int64
          example: 123
        amount:
          type: integer
          format: int64
          example: 10000
        date_time:
          type: string
          format: date-time
        paid:
          type: boolean
        complete:
          type: boolean
    Service:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 124
        name:
          type: string
          example: Помыть авто
        amount:
          type: integer
          format: int64
          example: 10000
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Неверный запрос
